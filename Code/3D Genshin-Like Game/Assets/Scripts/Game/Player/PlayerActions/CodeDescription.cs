using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class CodeDescription : MonoBehaviour
{
    /*
       Если addToPosition.y != 0:
            Проверяем наличие стены сверху (Physics.Raycast(_playerTransfrom.position, Vector3.up, out hit);)
            Если стена есть и нормаль больше или равен 45 градусов и расстояние меньше или равно addToPosition.y - высота персонажа
            (опрделить точный угол нормаль, 45 градусов лишь угол наклона, а не угол нормали)
            (зачения угла при которых по стене нельзя карабкаться):
                addToPosition.y = 0;
            Если нет стены:
                Проверяем вогнутую стену:
                Если ее нет или по ней нельзя карабкаться(можно стоять):
                    Проверяем хватит ли места чтобы персонаж стоял
                    Если хватит:
                        Если addToPosition.x == 0:
                            Перемещаем на addToPosition.y
                            Вызываем метод для вылезания со стены(в нем выходим из карабканья)

                        Если нет: 
                            Вызываем метод проверки стены по x



            Если стены нет или(угол нормали меньше 45 градусов и расстояние меньше или равно addToPosition.y - высота персонажа)
            (опрделить точный угол нормаль, 45 градусов лишь угол наклона, а не угол нормали)
            (значения угла при которых по стене нельзя карабкаться):
                Если addToPosition.x != 0:
                    RayCast из точки _playerTranformPosition + addToPosition
                    Если стена есть и нормаль совпадает:
                        RayCast из точки _playerTransform.position + addToPosition / 2:
                        Если стена есть и нормаль совпадает:
                            Перемещаем на addToPosition
                        Если стены нет или нормаль не совпадает:
                            Ищем близжайшую точку в которой стена есть и нормаль совпадает
                            (расстояние от _playerTransform.position до _playerTransfrom.position + addToPosition / 2)
                            Перемещаем персонажа в нее
                    Если стены нет или нормаль не совпадет:
                        RayCast из точки _playerTransform.position + addToPosition / 2:
                        Если стена есть и нормаль совпадает:
                            Ищем близжайшую точку в которой стена есть и нормаль совпадает
                            (расстояние от _playerTransform.position + addToPosition / 2 до _playerTransfrom.position + addToPosition)
                            Перемещаем персонажа в нее
                        Если стены нет или нормаль не совпадает:
                            Ищем близжайшую точку в которой стена есть и нормаль совпадает
                            (расстояние от _playerTransform.position до _playerTransfrom.position + addToPosition / 2)
                            Перемещаем персонажа в нее
                Если addToPosition.x == 0(else от друго if):
                    Проверяем наличие стены сверху(или используем данные из прошлого RayCast)
                    Если стена есть:
                        Если нормаль в пределах того угла, в котором можно карабкаться:
                            RayCast из точки _playerTransfrom.position + расстояние до стены / 2 
                            Если стена есть и нормаль совпадает с минус нормалью персонажа:
                                Перемещаем на расстояние до стены - высота персонажа(может быть не нужно, если точка RayCast находится в верхней точке персонажа)
                                Меняем нормаль на минус нормаль персонажа
                            Если стены нет:
                                Ищем точку в которой есть стена и нормаль совпадает
                                (от _playerTransfrom.position до _playerTransform.position + addToPosition / 2)
                                Перемещаем персонажа в неё
                            Если нормаль не совпадает:
                                Ищем точку в которой есть стена и нормаль совпадает
                                (от _playerTransfrom.position до _playerTransform.position + addToPosition / 2)
                                Перемещаем персонажа в неё
                                Меняем нормаль персонажа на минус нормаль стены
                    Если стены нет:
                        (Проверяем вогнутую стену и тд)
                        RayCast из точки _playerTransfrom.position + addToPosition
                        Если стена есть и нормаль совпадает:
                            RayCast из точки _playerTransform.position + addToPosition / 2
                            Если стена есть и нормаль совпадает:
                                Перемещаем на addToPosition
                                Если нормаль не совпадет:
                                    Меняем нормаль персонажа на минус нормаль стены
                            Если стены нет или нормаль не сопадает:
                                Ищем точку в которой стена есть и нормаль совпадает
                                Перемещаем персонажа в неё
                        Если стены нет:
                            Ищем точку в котрой стена есть и нормаль совпадает
                        Если нормаль не совпадает:
                            Ищем точку в которой нормаль совпадает
                            Перемещаем персонажа в нее
                            Меняем нормаль персонажа на минус нормаль стены


                        (Если расстояние до вогнутой стены в пределах addToPosition.y(следует из прямоугольного треуг.) и нормаль сопадает:перемещаем вверх
                        Если расстояние до вогнутой стены в пределах addToPosition.y(следует из прямоугольного треуг.) и нормаль НЕ сопадает:ищем точку где стена изгмбается
                        Если расстояние до вогнутой стены больше чем addToPosition.y:проверяем можем ли вставать в той точке
                        (RayCast вверх на _playerTransfron.position + addToPosition.y + высота пермосонажа)
                
                return;
            !!!(ОБЯЗАТЕЛЬНО ЗАВЕРШАТЬ ВЫПОЛНЕНИЕ ФУНКЦИИ ЕСЛИ ПОШЛО ПО ВЕТВИ "Если стены нет или угол нормали меньше 45 градусов")!!!
            Если перемещаться по y некуда, то addToPosition.y обнуляется и все идет по коду написанному ниже,
            Если же стена не находится, проверяем на наличие вогнутой стены сверху
            Если угол стены нет или по ней нельзя карабкаться, также обнуляем addToPosition.y
            и все также идет по коду написанному нижу,
            Если же стена в первый (сверху(выпуклая)) или второй(вогнутая) раз была найдена
            Используется другой алгоритм перемщения(выше)
            !!!И ПОСЛЕ НЕГО КОД НЕ ДОЛЖЕН ИСПОЛНЯТЬСЯ!!!
        
        Проверяем наличие(выпуклой) стены сбоку(справа или слева(сторону определяем через знак(+/-) addToPosotion.x)

        Если стена есть и расстостояние(расстояние до стены - радиус персонажа) до нее в пределах addToPosition.x(больше или равно):
            Проверяем наличие стены в середение(_playerTransform.position + расстояние до стены / 2)


            Если она есть и нормаль совпадает с минус нормалью персонажа и расстояние до нее меньше радиуса персонажа:
                Перемещаем персонажа на(расстояние до стены - радиус персонажа), также вычитаем из addToPosition.x то на сколько уже переместились
                Поворачиваем персонажа на минус нормаль стены
                Raycast из _playerTransform.position + addToPosition(то на что осталось переместиться)

                Если стена есть и нормаль совпадает:
                    Пермещаем на оставшееся расстояние(addToPosition)
                Если нет стены:
                    Через цикл for(на 5 итераций) ищем близжайшую точку в которой есть стена
                    Перемещаем персонажа туда
                    break
                Если нормаль не совпадает:
                    Через цикл for ищем близжайшую точку в которой нормаль совпадает с минус нормалью персонажа
                    Перемещаем персонажа туда
                    break

            Если стены нет:
                Ищем точку в которой стена есть(в расстоянии от _playerTransform.position до _playerTransform.position + addToPosition / 2)
                Перемщаем персонажа в нее как только находим последнюю
                Реализовать циклом из 5 итераций

            Если нормаль стены не совпадает с минус нормалью персонажа:
                p = 0 (переменная для того чтобы знать когда происходило предыдущее перемщение)
                moved = false;
                    Через цикл for на 10 итераций запускаем(цикл начать с 1; 10 включительно):
                        p++
                        Если moved -> Проверяем наличие стены сбоку(справа или слева(сторону определяем через знак(+/-) addToPosotion.x)
                        Если нашли и расстояние до нее БОЛЬШЕ(стена дальше чем конечная точка) чем addToPosition.x:
                            Проверяем есть ли стена в точке _playerTransfrom + addToPosition(на что осталось преместиться)
                            Если есть:
                                Проверяем точку в середине _playerTransform + addToPosition / 2
                                Стена есть и нормаль совпадает:
                                    Перемещаем на addToPosition
                                Стены нет или нормаль не совпадает:
                                    Ищем точку которая подходит и перемщаем на нее
                            Если нет:
                                Ищем близжающую точку со стеной с той же нормалью
                                Перемещаем в нее персонажа
                            break;

                        Если нашли и расстояние до нее МЕНЬШЕ или равно(стена ближе чем конечная точка) чем addToPosition:
                            Перемещаем на расстояние до стены
                            Меняем нормаль персонажа на минус нормаль стены
                            break;

    Если нет стены:
                            Проверяем есть ли стена в точке _playerTransfrom + addToPosition(на что осталось преместиться)
                            Если есть и нормаль совпадает:
                                Проверяем точку в середине _playerTransform + addToPosition / 2
                                Стена есть и нормаль совпадает:
                                    Перемещаем на addToPosition
                                Стены нет или нормаль не совпадает:
                                    Ищем точку которая подходит и перемщаем на нее
                            Если нет:
                                Ищем близжающую точку со стеной с той же нормалью
                                Перемещаем в нее персонажа
                            break;

                        Raycast с точки _playerTransform.position + p* k(0,1 (количество итераций в -1 степени)) * addToPosition
                        Если стена есть и нормаль совпадает с минус нормалью персонажа -> пропускаем
                        Если не свопадает нормаль или стены нет:
                            Перемещаем персонажа на расстояние p* k * addToPosition
                            Меняем нормаль персонажа на нормаль стены из последнего Raycast
                            Из addToPosition.x вычитаем p * k* addToPosition
                            moved = true
                            Если addToPosition меньше или равен нулю -> break
                            Если стены нет -> break;

    Если стены нет или расстояние больше:
            Raycast Из точки _playrTransfrom.position + add.ToPosition.x (Проверяем нет ли вогнутой стены)
            Если стена есть и нормаль не свопадает с минус нормалью песронажа:
                Raycast Из точки _playrTransfrom.position + add.ToPosition.x / 2
                Если стена есть и нормаль совпадает с минус нормалью персонажа:
                    Перемещаем персонажа на addToPosition / 2
                    addToPosition -= addToPosition / 2
                    Через цикл ищем точку в которой стена есть и нормаль совпадает с минус нормалью персонажа (от _playrTransfrom.position до _playrTransfrom.position + add.ToPosition.x)
                    В пермещаем в последнюю найденную точку
                    Меняем нормаль песронажа на минус нормаль стены
                    Вычитаем из addToPosition то на сколько перемстились
                    Raycast Из точки _playrTransfrom.position + add.ToPosition.x (то на что осталось переместиться)
                    Если стена есть и нормаль совпадает:
                        Raycast из точки _playrTransfrom.position + add.ToPosition.x / 2
                        Стена есть и нормаль совпадает:
                            Перемещаем на addToPosition
                        Стены нет или нормаль не совпадает:
                            Ищем близжайшую точку в которой есть стена и нормаль свопадает и расстояние равно радиусу персонажа
                    Если стены нет:
                        Raycast из точки _playrTransfrom.position + add.ToPosition.x / 2
                        Стена есть и нормаль совпадает:
                            Перемещаем на addToPosition / 2
                            addToPosition -= addToPosition / 2
                            Ищем точку в которой стена есть и нормаль совпдает и расстояние равно радиусу персонажа
                            Перемещаем в нее пероснажа
                        Стены нет или нормаль не совпадает:
                            Ищем близжайшую точку в которой есть стена и нормаль свопадает
                            

         */










    /* Actual Code:
     
    !!!Исходящей точкей RayCast должна быть позиция персонажа возле стены(_playerTransfrom.position - TransfromDirection(радиус персонажа))!!!
            
        !!!Перед выполнение сразу посчитать точный addToPosition (умножить на Time.deltaTime и какое-то число(climbingSpeed)
        !!!(для climbJump умножать на число во время передачи в метод(ClimbJump(toAdd * число))))
        !!!Делить на число(которое раньше было в InputController) при передаче в данный метод(TryMovePosition))
        Если нельзя переместиться в те точки то завершить выполнение

        Если addToPosition.y != 0 && addToPosition.x == 0:
            Метод проверки стены по y(возвращает int (1)(на сколько можем переместиться по y),bool (2) (нужно ли изменить нормаль),
            float (3) (новая нормаль(!!!!возвращать сразу СО ЗНАКОМ МИНУС!!)!/0(если не нужно менять нормаль)))

        Если addToPosition.y == 0 && addToPosition.x != 0:
            Метод проверки стены по x(возвращает float (1)(на сколько можем переместиться по x),bool (2) (нужно ли изменить нормаль),
            float (3) (новая нормаль(!!!!возвращать сразу СО ЗНАКОМ МИНУС!!)!/0(если не нужно менять нормаль)))

        Если addToPosition.x != 0 и addToPosition.y != 0:
            Вызываем метод который уравняет длину вектора до 1
            Метод проверки стены по xy(возвращает Vector2/3 (1)(на сколько можем переместиться по xy),bool (2) (нужно ли изменить нормаль),
            float (3) (новая нормаль(!!!!возвращать сразу СО ЗНАКОМ МИНУС!!)!/0(если не нужно менять нормаль)))

        Если (2) && (1) != 0:
                Перемещаем пермонажа на (1)
                Меняем нормаль на (3)
            Иначе если (1) != 0:
                Перемещаем персонажа на (1)
            Иначе если (2):
                Меняем нормаль на (3)
            Тратим выносливость




        CheckYDirectionAvalibility(float toMoveY):
            Если toMoveY > 0:
                int direction = 1
            Иначе:
                int direction = -1

            Проверяем наличие стены сверху/снизу (Physics.Raycast(_playerTransfrom.position, TransformDirection(Vector3.up * direction), out hit)
            + ограничить расстояние до toMoveY - высота персонажа/2)
            Если стена есть и нормаль больше или равна 45 градусов
            (опрделить точный угол нормаль, 45 градусов лишь угол наклона, а не угол нормали)
            (зачения угла при которых по стене НЕЛЬЗЯ карабкаться):
                Если расстояние до стены больше чем высота персонажа / 2: (Есть куда продвинуться, персонаж не упирается в стену)
                    RayCast из точки _playerTransform.position + (расстояние до стены / 2 * direction) (середина) 
                    Если стена есть и нормаль совпадает с минус нормалью персонажа:
                        return расстояние до верхней стены - высота персонажа / 2, false, 0
                    Если стены нет:
                        Ищем близжайшую точку в которой есть стена и нормаль совпадает с минус нормалью персонажа( * direction)
                        Если нашли:
                            return расстояние до точки, false, 0
                        Если не нашли:
                            return 0, false, 0
                    Если нормаль не совпадает с минус нормалью персонажа:
                        Ищем точку в которой нормаль совпадает с минус нормалью персонажа ( * direction)
                        return расстояние до точки, true, -(минус) новая нормаль(в следующей точке от найденной)

                Если расстояние до стены меньше или равно высоте персонажа(else):
                    return 0, false, 0;

            Если стена есть и нормаль меньше или равна 45 градусам
            (опрделить точный угол нормали, 45 градусов лишь угол наклона, а не угол нормали)
            (зачения угла при которых по стене МОЖНО карабкаться):
                RayCast из точки _playerTransformPosition + (расстояние до верхней стены / 2 * direction) (середина)
                Если стена есть и нормаль совпадает с минус нормалью персонажа:
                    return расстояние до верхней стены - высота персонажа / 2, true, -(минус) нормаль верхней стены
                Если стены нет:
                    Ищем точку в которой стена есть и нормаль совпадает с минус нормалью персонажа ( * direction)
                    Если нашли:
                        return расстояние до точки,false,0
                    Если нет:
                        return 0, false, 0
                Если нормаль не совпадает с минус нормалью персонажа:
                    Ищем точку в которой нормаль совпадает с минус нормалью персонажа ( * direction)
                    return расстояние до точки, true, -(минус) нормаль стены(нормаль берем в следующей точке после той, расстояние до которой передаем)

            Если нет стены:
                RayCast из точки _playerTransform.position + (toMoveY * direction)
                Проверяем вогнутую стену
                Если ее нет или по ней нельзя карабкаться(угол слишком маленький)(можно стоять):
                    Проверяем хватит ли места чтобы персонаж стоял(3 RayCast * direction)
                    Если хватит:
                        Вызываем метод для вылезания со стены(в нем выходим из карабканья)
                        return 0,false,0;
                    Если нет: 
                        Ищем последнюю точку в которой нормаль совпадает с минус нормалью персонажа ( * direction):
                            return расстояние до точки,false,0;
                        Если ее нет:
                            return 0,false,0;

                Если есть:
                    Если нормаль совпадает:
                        RayCast из _playerTransform.position + (toMoveY / 2 * direction) (середина)
                        Если стена есть и нормаль совпадает с минус нормалью персонажа:
                            return toMoveY,false,0
                        Если стены нет:
                            Ищем близжайшую точку в которой стена есть и нормаль совпадает с минус нормалью персонажа ( * direction)
                            (от _playerTransform.position до _playerTransform.position + toMoveY / 2)
                            Если нашли:
                                return расстояние до точки которую нашли,false,0
                            Если не нашли:
                                return 0,false,0
                        Если нормаль не совпадает с минус нормалью персонажа:
                            Ищем близжайшую точку в которой нормаль совпадает с минус нормалью персонажа ( * direction)
                            return расстояние до точки, true, -(минус) нормаль стены в следующей точке(от расстояние до точки)
             



        CheckXDirectionAvalibility(float toMoveX):
            Если toMoveX > 0:
                int direction = 1
            Иначе:
                int direction = -1  

            RayCast(_playerTransfrom.position,нормаль персонажа + Vector3(0, 90 * direction,0),out hit)(Выпуклая стена)
            (ограничить расстояние RayCast до toMoveX - радиус персонажа)
            Если стена есть:
                RayCast(_playerTransform.postion + (toMoveX / 2 * direction), _playerTransform.forward)(Наличие стены в середине)
            
                Если она есть и нормаль совпадает с минус нормалью персонажа и расстояние до нее меньше или равно радиуса персонажа:
                    return расстояние до стены, true, -(минус) нормаль стены

                Если стены нет:
                    Ищем точку в которой стена есть и нормаль совпадает
                    (в расстоянии от _playerTransform.position до _playerTransform.position + addToPosition / 2) ( * direction)
                    Если нашли:
                        return расстояние до найденной точки, false, 0
            
                Если нормаль стены не совпадает с минус нормалью персонажа:
                    Ищем точку в которой есть стена и нормаль свопадает с минус нормалью персонажа ( * direction)
                    return расстояние до найденной точки, true, -(минус) нормаль в точке(следующей от найденной)

            Если стены нет:
                Raycast из точки _playrTransfrom.position + (toMoveX * direction) (Проверяем нет ли вогнутой стены)
                Если стена есть и нормаль не совпадает с минус нормалью песронажа:
                    RayCast Из точки _playrTransfrom.position + (toMoveX / 2 * direction) (В середине)
                    Если стена есть и нормаль совпадает с минус нормалью персонажа:
                        Ищем близжайшую точку в которой нормаль не совпадает с минус нормалью персонажа ( * direction)
                        (Расстояние от toMovex / 2 до toMoveX)
                        return расстояние до точки в котрой нормаль не совпадает, true, -(минус) нормаль стены
                    Если стены нет:
                        Ищем точку в которой стена есть и нормаль совпадает (от 0 до toMoveX / 2)
                        Если нашли:
                            return расстояние до точки, false, 0
                        Если не нашли:
                            return 0, false, 0
                    Если нормаль не совпадает:
                        Ищем близжайшую точку в которой совпдает с нормалью стены в конечной точке
                        return расстояние до точки, true, -(минус) нормаль стены(в следующей точке после найденной)
                Если стена есть и нормаль совпадает:
                    RayCast(_playerTransfrom.position + (toMoveX / 2 * direction) (В середине)
                    Если стена есть и нормаль совпадает:
                        return toMoveX ,false ,0
                    Если стены нет:
                        Ищем близжайшую точку в которой есть стена и нормаль свопадает ( * direction)
                        (от 0 до toMoveX / 2)
                        Если нашли:
                            return расстояние до точки, false, 0
                        Если не нашли:
                            return 0, false, 0
                    Если нормаль не совпадает с минус нормалью персонажа:
                        Ищем близжайшую точку в которой нормаль совпадает с минус нормалью пероснажа ( * direction)
                        (от 0 до toMoveX / 2)
                        return расстояние до точки, true, -(минус) нормаль стены(в следующей точке после найденной)
                Если стены нет:
                    RayCast(_playerTransfrom.position + (toMoveX / 2 * direction) (В середине)
                    Если стена есть и нормаль совпадает:
                        Ищем близжайшую точку в которой стена есть и нормаль совпадает ( * direction)
                        (от toMoveX / 2 до toMoveX)
                        Если нашли:
                            return расстояние до точки,false,0
                        Если не нашли:
                            return toMoveX / 2, false, 0
                    Если стены нет:
                        Ищем близжайшую точку в которой есть стена и нормаль свопадает ( * direction)
                        (от 0 до toMoveX / 2)
                        Если нашли:
                            return расстояние до точки, false, 0
                        Если не нашли:
                            return 0, false, 0
                    Если нормаль не совпадает с минус нормалью персонажа:
                        Ищем близжайшую точку в которой нормаль совпадает с минус нормалью пероснажа ( * direction)
                        (от 0 до toMoveX / 2)
                        return расстояние до точки, true, -(минус) нормаль стены(в следующей точке после найденной)
                       




        CheckXYDirectionAvailibility(float toMoveY, float toMoveX):

            Уравнять до длины веткора в 1 (toMoveY^2+toMovex^2 <= 1)
            if toMoveY > 0:
                int diretcionY = 1;
            else:
                int directionY = -1;
            
            if toMoveX > 0:
                int directionX = 1;
            else:
                int directionX = -1;

            RayCast(_playerTransform.position, playerTransform.forword + new Vector3(arccos(toMoveX/sqrt(toMoveX^2+toMoveY^2)) * directionY, 90 * directionX, 0), out hit) ?Проверить формулу
            (Проверка выпуклой стены с бока в который движемся) (ограничить дальность до sqrt(toMoveX^2+toMoveY^2) - sqrt((высота персонажа / 2) ^ 2 + радиус персонажа ^ 2))
            Если стена есть и hit.hormal.z > ...(по стене можно карабкаться): (Ось Z)
                Если расстояние до нее больше (sqrt((высота персонажа / 2) ^ 2 + радиус персонажа ^ 2)):
                    RayCast _playerTransfrom.position + Vector3(toMoveX / 2,toMoveY / 2, 0)(середина)
                    Если стена есть и нормаль совпадает:
                        return расстояние до стены - sqrt((высота персонажа / 2) ^ 2 + радиус персонажа ^ 2), true, -(минус) нормаль стены
                    Если стены нет:
                        Ищем близжайшую точку в которой стены есть и нормаль совпадает с минус нормалью персонажа
                        Если нашли:
                            return расстояние до точки, false, 0
                        Если не нашли:
                            return 0, false, 0
                    Если нормаль не совпадает с минус нормалью персонажа:
                        Ищем точку в которой нормаль совпадает с минус нормалью персонажа
                        return расстояние до точки, true, -(минус) нормаль стены(берем в следующей точке, после той которую передаём)
                Если расстояние меньше или равно (sqrt((высота персонажа / 2) ^ 2 + радиус персонажа ^ 2)) (else):
                    return 0, true, -(минус) новая нормаль
            Если стена есть и hit.hormal.z < ...(по стене НЕЛЬЗЯ карабкаться): (Ось Z)
                RayCast _playerTransfrom.position + Vector3(toMoveX / 2,toMoveY / 2, 0)(середина)
                    Если стена есть и нормаль совпадает:
                        return расстояние до стены - sqrt((высота персонажа / 2) ^ 2 + радиус персонажа ^ 2), false, 0
                    Если стены нет:
                        Ищем близжайшую точку в которой стены есть и нормаль совпадает с минус нормалью персонажа
                        Если нашли:
                            return расстояние до точки, false, 0
                        Если не нашли:
                            return 0, false, 0
                    Если нормаль не совпадает с минус нормалью персонажа:
                        Ищем точку в которой нормаль совпадает с минус нормалью персонажа
                        return расстояние до точки, true, -(минус) нормаль стены(берем в следующей точке, после той которую передаём)
                Если расстояние меньше или равно (sqrt((высота персонажа / 2) ^ 2 + радиус персонажа ^ 2)) (else):
                    return 0, false, 0
            Если стены нет:
                RayCast из точки _playerTranformPosition + Vector3(toMoveX, toMoveY, 0) (вогнутая стены) 
                    Если стена есть и нормаль совпадает с минус нормалью персонажа и расстояние до нее меньше или равно радиусу персонажа:
                        RayCast из точки _playerTransform.position + Vector3(toMoveX / 2, toMoveY / 2, 0):(середина)
                        Если стена есть и нормаль совпадает с минус нормалью персонажа:
                            return Vector3(toMoveX, toMoveY, 0), 0, false
                        Если стены нет:
                            Ищем близжайшую точку в которой стена есть и нормаль совпадает с минус нормалью персонажа
                            (расстояние от _playerTransform.position до _playerTransfrom.position + addToPosition / 2)
                            Если нашли:
                                return расстояние до точки, false, 0
                            Если не нашли:
                                return 0, false, 0
                        Если нормаль не совпадает:
                            Ищем близжайшую точку в которой стена есть и  нормаль совпадает с минус нормалью персонажа
                            return расстояние до точки, true, -(минус) нормаль стены(в следующей точке, после той что передаем)
                    Если стены нет:
                        RayCast из точки _playerTransform.position + Vector3(toMoveX, toMoveY, 0) / 2:
                        Если стена есть и нормаль совпадает с минус нормалью персонажа:
                            Ищем близжайшую точку в которой стена есть и нормаль совпадает с минус нормалью персонажа
                            (расстояние от _playerTransform.position + addToPosition / 2 до _playerTransfrom.position + addToPosition)
                            return расстояние до точки,false,0
                        Если стены нет:
                            Ищем близжайшую точку в которой стена есть и нормаль совпадает с минус нормалью персонажа
                            (расстояние от _playerTransform.position до _playerTransfrom.position + addToPosition / 2)
                            Если нашли:
                                return расстояние до точки, false, 0
                            Если не нашли:
                                return 0, false, 0
                        Если нормаль не совпадает:
                            Ищем близжайшую точку в которой стена есть и  нормаль совпадает с минус нормалью персонажа
                            return расстояние до точки, true, -(минус) нормаль стены(в следующей точке, после той что передаем)
                     Если нормаль не совпадет с минус нормалью персонажа:
                        RayCast из точки _playerTransform.position + Vector3(toMoveX, toMoveY, 0) / 2:
                        Если стена есть и нормаль совпадает с минус нормалью персонажа:
                            Ищем близжайшую точку в которой стена есть и нормаль совпадает с минус нормалью персонажа
                            (расстояние от _playerTransform.position + addToPosition / 2 до _playerTransfrom.position + addToPosition)
                            return расстояние до точки,true,-(минус) новая нормаль
                        Если стены нет:
                            Ищем близжайшую точку в которой стена есть и нормаль совпадает с минус нормалью персонажа
                            (расстояние от _playerTransform.position до _playerTransfrom.position + addToPosition / 2)
                            Если нашли:
                                return расстояние до точки, false, 0
                            Если не нашли:
                                return 0, false, 0
                        Иначе:
                            Ищем близжайшую точку в которой стена есть и  нормаль совпадает с минус нормалью персонажа (от addToPosition / 2
                            return расстояние до точки, true, -(минус) нормаль стены(в следующей точке, после той что передаем)


    */
}
